// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model Restaurant {
  id            String             @id @default(uuid())
  rating        Float
  rating_count  Int
  category      String
  city          String
  description   String?
  name          String
  price_range   String?
  featured      RestaurantFeature?
  is_favorite   Boolean?           @default(false)
  thumbnail_url String?
  images        RestaurantImage[]

  // To return `Date`s intact through the API we use transformers
  // https://trpc.io/docs/v11/data-transformers
  // This is unique so it can be used for cursor-based pagination
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("restaurants")
}

model RestaurantImage {
  id            Int        @id @default(autoincrement())
  url           String
  restaurant_id String
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("restaurant_images")
}

model RestaurantFeature {
  id            Int        @id @default(autoincrement())
  text          String
  icon          String
  restaurant_id String     @unique
  restaurant    Restaurant @relation(fields: [restaurant_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt

  @@map("restaurant_features")
}
